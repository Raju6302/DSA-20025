Stack (Using Linked List)
A stack is a linear data structure that follows the Last In, First Out (LIFO) principle. This means that the last element added to the stack is the first one to be removed.

How Stack Works?
 1. Push Operation – Adds an element to the top of the stack.

 2. Pop Operation – Removes the top element from the stack.
  

Implementation Details:

  A Node class is used to represent each element in the stack.

  The stack is implemented using a linked list where the top pointer keeps track of the last added node.

  The length variable keeps track of the number of elements in the stack.

---------- Pseudocode -----------

Push (Insert Element at Top)

  PUSH(value):
    Create a new Node with given value
    If stack is empty:
        Set top = new Node
    Else:
        Set new Node's next to top
        Update top to new Node
    Increment length

  Pop (Remove Top Element)

    POP():
      If stack is empty:
          Return NULL
      Store top node in temp
      Update top to top.next
      Set temp.next = NULL  // Disconnect popped node
      Decrement length
      Return temp (popped node)
      

Time & Space Complexity

  Operation	Time Complexity	Space Complexity
  Push	        O(1)	          O(1)
  Pop	          O(1)	          O(1)


